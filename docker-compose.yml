version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,DOCKER://kafka:29092
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,DOCKER://0.0.0.0:29092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:15
    container_name: ozi-postgres
    restart: always
    environment:
      POSTGRES_DB: ozi
      POSTGRES_USER: ozi_user
      POSTGRES_PASSWORD: ozi_pass
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HOST=0.0.0.0

  consumer:
    build:
      context: .
      dockerfile: analytics/Dockerfile
    container_name: analytics-consumer
    environment:
      - KAFKA_BOOTSTRAP_SERVER=kafka:29092
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=ozi
      - POSTGRES_USER=ozi_user
      - POSTGRES_PASSWORD=ozi_pass
    depends_on:
      - kafka
      - postgres
    volumes:
      - ./analytics:/app/analytics
    command: python -m consumer

  ozi-api:
    build:
      context: .
      dockerfile: rag/Dockerfile
    container_name: ozi-api
    ports:
      - "8000:8000"
    environment:
      - VECTOR_DB_HOST=qdrant
      - VECTOR_DB_PORT=6333
      - OPENAI_API_KEY=<KEY_HERE>
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=ozi
      - POSTGRES_USER=ozi_user
      - POSTGRES_PASSWORD=ozi_pass
    depends_on:
      - qdrant
      - postgres
    volumes:
      - ./rag:/app/rag

volumes:
  qdrant_storage:
  postgres_data:
